
using System.Collections.Generic;
using System.Text.Json;
using System;
using System.Text.Json.Serialization;

// Autogenerated 2021-06-06T09:44:39+10:00
namespace SBucket
{
    public class BaseUser {
        
        
                
        [JsonInclude, JsonPropertyName("name")]
        public string Name { get; set; }

            
                
        [JsonInclude, JsonPropertyName("id")]
        public string Id { get; set; }

            
                
        [JsonInclude, JsonPropertyName("active")]
        public bool Active { get; set; }

            
                
        [JsonInclude, JsonPropertyName("createdAt")]
        public DateTime CreatedAt { get; set; }

            
                
        [JsonInclude, JsonPropertyName("updatedAt")]
        public DateTime UpdatedAt { get; set; }

                    
        public string Serialise()
        {
            var options = new JsonSerializerOptions { WriteIndented = true, IncludeFields = true };
            string jsonString = JsonSerializer.Serialize(this, options);
            return jsonString;
        }

        public BaseUser Deserialise(string json)
        {
            
            var deserialised = CreateFromJson(json);

            
            Name = deserialised.Name;
            Id = deserialised.Id;
            Active = deserialised.Active;
            CreatedAt = deserialised.CreatedAt;
            UpdatedAt = deserialised.UpdatedAt;
            return this;
        }
           

        public static BaseUser CreateFromJson(string json)
        {
            return JsonSerializer.Deserialize<BaseUser>(json);
        }

        public BaseUser()
        {

        }
        
        public BaseUser(string json)
        {
            Deserialise(json);
        }
    }    
}

